<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectTypeGuids>{8FFB629D-F513-41CE-95D2-7ECE97B6EEEC};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <ProjectGuid>{0EE2B36C-F7CD-49FA-A270-D7D988CFF6E5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Emgu.CV</RootNamespace>
    <IPhoneResourcePrefix>Resources</IPhoneResourcePrefix>
    <AssemblyName>Emgu.CV.Platform.IOS</AssemblyName>
  </PropertyGroup>
  <PropertyGroup>
    <OpenCVBinaryDir>$(MSBuildThisFileDirectory)..\..\libs</OpenCVBinaryDir>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(OpenCVBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(OpenCVBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(OpenCVBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="netstandard">
      <!-- HintPath for macOS -->
      <HintPath Condition="Exists('/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Drawing.Common.dll')">/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/netstandard.dll</HintPath>
      <!-- HintPath for Windows -->
      <HintPath Condition="Exists('$(TargetFrameworkRootPath)\Xamarin.iOS\v1.0\Facades\System.Drawing.Common.dll')">$(TargetFrameworkRootPath)\Xamarin.iOS\v1.0\Facades\netstandard.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Xml.Serialization" />
    <Reference Include="Xamarin.iOS" />
    <Reference Include="System.Drawing.Common">
      <!-- HintPath for macOS -->
      <HintPath Condition="Exists('/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Drawing.Common.dll')">/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Drawing.Common.dll</HintPath>
      <!-- HintPath for Windows -->
      <HintPath Condition="Exists('$(TargetFrameworkRootPath)\Xamarin.iOS\v1.0\Facades\System.Drawing.Common.dll')">$(TargetFrameworkRootPath)\Xamarin.iOS\v1.0\Facades\System.Drawing.Common.dll</HintPath>
    </Reference>
  </ItemGroup>
  <PropertyGroup>
    <EmguCVLinkTarget>Xamarin iOS Native Binding Library</EmguCVLinkTarget>
    <EmguCVNativeFile>$(OpenCVBinaryDir)\iOS\libcvextern.a</EmguCVNativeFile>
    <EmguCVErrorMessage Condition="!Exists('$(EmguCVNativeFile)')"> This package do not contain necessary binary for $(EmguCVLinkTarget). Emgu CV for iOS Commercial License is required. Missing $(EmguCVNativeFile) </EmguCVErrorMessage>
    <EmguCVDeployMessage Condition="Exists('$(EmguCVNativeFile)')">$(EmguCVDeployMessage)ios </EmguCVDeployMessage>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="Resources\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\CommonAssemblyInfo.cs">
      <Link>CommonAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="..\..\Emgu.CV.NativeImage\CGImageExtension.cs">
      <Link>CGImageExtension.cs</Link>
    </Compile>
    <Compile Include="..\..\Emgu.CV.NativeImage\UIImageExtension.cs">
      <Link>UIImageExtension.cs</Link>
    </Compile>
    <Compile Include="CvInvokeIOS.cs" />
    <ObjcBindingApiDefinition Include="ApiDefinition.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NetStandard_iOS\Emgu.CV.Platform.NetStandard.IOS.csproj">
      <Project>{79214DCD-3F36-4C50-97F4-11AF21F60711}</Project>
      <Name>Emgu.CV.Platform.NetStandard.IOS</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <NativeReference Include="..\..\libs\iOS\libcvextern.a">
      <Kind>Static</Kind>
      <SmartLink>True</SmartLink>
      <ForceLoad>True</ForceLoad>
      <IsCxx>True</IsCxx>
      <LinkerFlags>-stdlib=libc++ -ObjC -lc++</LinkerFlags>
      <Frameworks>Foundation Accelerate CoreFoundation CoreGraphics AssetsLibrary AVFoundation CoreImage CoreMedia CoreVideo QuartzCore ImageIO UIKit CoreText</Frameworks>
    </NativeReference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Xamarin\iOS\Xamarin.iOS.ObjCBinding.CSharp.targets" />
  <Target Name="BeforeBuild">
    <Message Text="MSBuildExtensionsPath: $(MSBuildExtensionsPath)" Importance="high" />
    <Message Text="TargetFrameworkRootPath: $(TargetFrameworkRootPath)" Importance="high" />
  </Target>
  <Target Name="AfterBuild">
    <Message Text="Copying $(OutputPath)$(AssemblyName).dll and $(OutputPath)$(AssemblyName).xml to $(OpenCVBinaryDir)" Importance="high" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFolder="$(OpenCVBinaryDir)" ContinueOnError="true" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).xml" DestinationFolder="$(OpenCVBinaryDir)" ContinueOnError="true" />
  </Target>
</Project>